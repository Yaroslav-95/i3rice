#!/bin/sh

# Usage:
# `record`: Ask for recording type via dmenu
# `record screencast`: Record both audio and screen
# `record video`: Record only screen
# `record audio`: Record only audio
# `record kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

# Source settings from .dmenurc
VIDEODIR="$HOME/Video/recordings"
AUDIODIR="$HOME/Documents/recordings"

if ! [ -f "$HOME/.dmenurc" ]; then
	cp /usr/share/dmenu/dmenurc $HOME/.dmenurc
fi
. $HOME/.dmenurc

killall -q compton

updateicon() { \
	echo "$1" > ~/.recordingicon
	pkill -RTMIN+9 i3blocks
	}

killrecording() {
	recpid="$(cat ~/.recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f ~/.recordingpid
	updateicon ""
	pkill -RTMIN+9 i3blocks
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
    compton -b
    notify-send "Recording stopped"
	exit
	}

screencastpulse() { \
	ffmpeg -y \
	-f x11grab \
	-framerate 60 \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i :0.0 \
	-f alsa -i default \
	-r 30 \
 	-c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
	"$VIDEODIR/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > ~/.recordingpid
	updateicon "⏺️ rec"
       	}

screencastalsa() { \
	ffmpeg -y \
	-f x11grab \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i :0.0 \
	-thread_queue_size 1024 \
 	-f alsa -ar 44100 -i plughw:2 \
 	-c:v libx264 -r 30 -c:a flac \
	"$VIDEODIR/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > ~/.recordingpid
	updateicon "⏺️ rec"
	}

video() { ffmpeg \
	-f x11grab \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i :0.0 \
 	-c:v libx264 -qp 0 -r 30 \
	"$VIDEODIR/video-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > ~/.recordingpid
	updateicon "⏺️ rec"
	}

audiopulse() { \
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	"$AUDIODIR/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > ~/.recordingpid
	updateicon "🎤 rec"
	}

audioalsa() { \
	ffmpeg -y \
	-f alsa -ar 44100 -i plughw:0 \
	"$AUDIODIR/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > ~/.recordingpid
	updateicon "🎤 rec"
	}

askrecording() { \
	choice=$(printf "screencast\\nvideo\\naudio" | dmenu -i -p "Select recording style:" $DMENU_OPTIONS)
	case "$choice" in
		screencast) screencastalsa;;
		audio) audioalsa;;
		video) video;;
	esac
	}

asktoend() { \
	response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?" $DMENU_OPTIONS) &&
	[ "$response" = "Yes" ] &&  killrecording
	}


case "$1" in
	screencast) screencastalsa;;
	audio) audioalsa;;
	video) video;;
	kill) killrecording;;
	*) ([ -f ~/.recordingpid ] && asktoend && exit) || askrecording;;
esac
